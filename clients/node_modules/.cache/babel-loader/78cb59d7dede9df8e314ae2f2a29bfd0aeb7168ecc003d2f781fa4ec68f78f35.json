{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dfareporting_v4 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar dfareporting_v4;\n(function (dfareporting_v4) {\n  /**\n   * Campaign Manager 360 API\n   *\n   * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const dfareporting = google.dfareporting('v4');\n   * ```\n   */\n  class Dfareporting {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.accountActiveAdSummaries = new Resource$Accountactiveadsummaries(this.context);\n      this.accountPermissionGroups = new Resource$Accountpermissiongroups(this.context);\n      this.accountPermissions = new Resource$Accountpermissions(this.context);\n      this.accounts = new Resource$Accounts(this.context);\n      this.accountUserProfiles = new Resource$Accountuserprofiles(this.context);\n      this.ads = new Resource$Ads(this.context);\n      this.advertiserGroups = new Resource$Advertisergroups(this.context);\n      this.advertiserInvoices = new Resource$Advertiserinvoices(this.context);\n      this.advertiserLandingPages = new Resource$Advertiserlandingpages(this.context);\n      this.advertisers = new Resource$Advertisers(this.context);\n      this.billingAssignments = new Resource$Billingassignments(this.context);\n      this.billingProfiles = new Resource$Billingprofiles(this.context);\n      this.billingRates = new Resource$Billingrates(this.context);\n      this.browsers = new Resource$Browsers(this.context);\n      this.campaignCreativeAssociations = new Resource$Campaigncreativeassociations(this.context);\n      this.campaigns = new Resource$Campaigns(this.context);\n      this.changeLogs = new Resource$Changelogs(this.context);\n      this.cities = new Resource$Cities(this.context);\n      this.connectionTypes = new Resource$Connectiontypes(this.context);\n      this.contentCategories = new Resource$Contentcategories(this.context);\n      this.conversions = new Resource$Conversions(this.context);\n      this.countries = new Resource$Countries(this.context);\n      this.creativeAssets = new Resource$Creativeassets(this.context);\n      this.creativeFields = new Resource$Creativefields(this.context);\n      this.creativeFieldValues = new Resource$Creativefieldvalues(this.context);\n      this.creativeGroups = new Resource$Creativegroups(this.context);\n      this.creatives = new Resource$Creatives(this.context);\n      this.dimensionValues = new Resource$Dimensionvalues(this.context);\n      this.directorySites = new Resource$Directorysites(this.context);\n      this.dynamicTargetingKeys = new Resource$Dynamictargetingkeys(this.context);\n      this.eventTags = new Resource$Eventtags(this.context);\n      this.files = new Resource$Files(this.context);\n      this.floodlightActivities = new Resource$Floodlightactivities(this.context);\n      this.floodlightActivityGroups = new Resource$Floodlightactivitygroups(this.context);\n      this.floodlightConfigurations = new Resource$Floodlightconfigurations(this.context);\n      this.inventoryItems = new Resource$Inventoryitems(this.context);\n      this.languages = new Resource$Languages(this.context);\n      this.metros = new Resource$Metros(this.context);\n      this.mobileApps = new Resource$Mobileapps(this.context);\n      this.mobileCarriers = new Resource$Mobilecarriers(this.context);\n      this.operatingSystems = new Resource$Operatingsystems(this.context);\n      this.operatingSystemVersions = new Resource$Operatingsystemversions(this.context);\n      this.orderDocuments = new Resource$Orderdocuments(this.context);\n      this.orders = new Resource$Orders(this.context);\n      this.placementGroups = new Resource$Placementgroups(this.context);\n      this.placements = new Resource$Placements(this.context);\n      this.placementStrategies = new Resource$Placementstrategies(this.context);\n      this.platformTypes = new Resource$Platformtypes(this.context);\n      this.postalCodes = new Resource$Postalcodes(this.context);\n      this.projects = new Resource$Projects(this.context);\n      this.regions = new Resource$Regions(this.context);\n      this.remarketingLists = new Resource$Remarketinglists(this.context);\n      this.remarketingListShares = new Resource$Remarketinglistshares(this.context);\n      this.reports = new Resource$Reports(this.context);\n      this.sites = new Resource$Sites(this.context);\n      this.sizes = new Resource$Sizes(this.context);\n      this.subaccounts = new Resource$Subaccounts(this.context);\n      this.targetableRemarketingLists = new Resource$Targetableremarketinglists(this.context);\n      this.targetingTemplates = new Resource$Targetingtemplates(this.context);\n      this.userProfiles = new Resource$Userprofiles(this.context);\n      this.userRolePermissionGroups = new Resource$Userrolepermissiongroups(this.context);\n      this.userRolePermissions = new Resource$Userrolepermissions(this.context);\n      this.userRoles = new Resource$Userroles(this.context);\n      this.videoFormats = new Resource$Videoformats(this.context);\n    }\n  }\n  dfareporting_v4.Dfareporting = Dfareporting;\n  class Resource$Accountactiveadsummaries {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/accountActiveAdSummaries/{summaryAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'summaryAccountId'],\n        pathParams: ['profileId', 'summaryAccountId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Accountactiveadsummaries = Resource$Accountactiveadsummaries;\n  class Resource$Accountpermissiongroups {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/accountPermissionGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/accountPermissionGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Accountpermissiongroups = Resource$Accountpermissiongroups;\n  class Resource$Accountpermissions {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/accountPermissions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/accountPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Accountpermissions = Resource$Accountpermissions;\n  class Resource$Accounts {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/accounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Accounts = Resource$Accounts;\n  class Resource$Accountuserprofiles {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/accountUserProfiles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Accountuserprofiles = Resource$Accountuserprofiles;\n  class Resource$Ads {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/ads/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Ads = Resource$Ads;\n  class Resource$Advertisergroups {\n    constructor(context) {\n      this.context = context;\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/advertiserGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/advertiserGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Advertisergroups = Resource$Advertisergroups;\n  class Resource$Advertiserinvoices {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/advertisers/{advertiserId}/invoices').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'advertiserId'],\n        pathParams: ['advertiserId', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Advertiserinvoices = Resource$Advertiserinvoices;\n  class Resource$Advertiserlandingpages {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/advertiserLandingPages/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Advertiserlandingpages = Resource$Advertiserlandingpages;\n  class Resource$Advertisers {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/advertisers/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Advertisers = Resource$Advertisers;\n  class Resource$Billingassignments {\n    constructor(context) {\n      this.context = context;\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/billingProfiles/{billingProfileId}/billingAssignments').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'billingProfileId'],\n        pathParams: ['billingProfileId', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/billingProfiles/{billingProfileId}/billingAssignments').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'billingProfileId'],\n        pathParams: ['billingProfileId', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Billingassignments = Resource$Billingassignments;\n  class Resource$Billingprofiles {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/billingProfiles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/billingProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/billingProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Billingprofiles = Resource$Billingprofiles;\n  class Resource$Billingrates {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/billingProfiles/{billingProfileId}/billingRates').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'billingProfileId'],\n        pathParams: ['billingProfileId', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Billingrates = Resource$Billingrates;\n  class Resource$Browsers {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/browsers').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Browsers = Resource$Browsers;\n  class Resource$Campaigncreativeassociations {\n    constructor(context) {\n      this.context = context;\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'campaignId'],\n        pathParams: ['campaignId', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'campaignId'],\n        pathParams: ['campaignId', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Campaigncreativeassociations = Resource$Campaigncreativeassociations;\n  class Resource$Campaigns {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/campaigns/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Campaigns = Resource$Campaigns;\n  class Resource$Changelogs {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/changeLogs/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/changeLogs').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Changelogs = Resource$Changelogs;\n  class Resource$Cities {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/cities').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Cities = Resource$Cities;\n  class Resource$Connectiontypes {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/connectionTypes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/connectionTypes').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Connectiontypes = Resource$Connectiontypes;\n  class Resource$Contentcategories {\n    constructor(context) {\n      this.context = context;\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/contentCategories/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/contentCategories/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Contentcategories = Resource$Contentcategories;\n  class Resource$Conversions {\n    constructor(context) {\n      this.context = context;\n    }\n    batchinsert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/conversions/batchinsert').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    batchupdate(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/conversions/batchupdate').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Conversions = Resource$Conversions;\n  class Resource$Countries {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/countries/{dartId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'dartId'],\n        pathParams: ['dartId', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/countries').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Countries = Resource$Countries;\n  class Resource$Creativeassets {\n    constructor(context) {\n      this.context = context;\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        mediaUrl: (rootUrl + '/upload/dfareporting/v4/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets').replace(/([^:]\\/)\\/+/g, '$1'),\n        requiredParams: ['profileId', 'advertiserId'],\n        pathParams: ['advertiserId', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Creativeassets = Resource$Creativeassets;\n  class Resource$Creativefields {\n    constructor(context) {\n      this.context = context;\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creativeFields/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creativeFields/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Creativefields = Resource$Creativefields;\n  class Resource$Creativefieldvalues {\n    constructor(context) {\n      this.context = context;\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'creativeFieldId', 'id'],\n        pathParams: ['creativeFieldId', 'id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'creativeFieldId', 'id'],\n        pathParams: ['creativeFieldId', 'id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'creativeFieldId'],\n        pathParams: ['creativeFieldId', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'creativeFieldId'],\n        pathParams: ['creativeFieldId', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'creativeFieldId', 'id'],\n        pathParams: ['creativeFieldId', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'creativeFieldId'],\n        pathParams: ['creativeFieldId', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Creativefieldvalues = Resource$Creativefieldvalues;\n  class Resource$Creativegroups {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creativeGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Creativegroups = Resource$Creativegroups;\n  class Resource$Creatives {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creatives/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Creatives = Resource$Creatives;\n  class Resource$Dimensionvalues {\n    constructor(context) {\n      this.context = context;\n    }\n    query(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/dimensionvalues/query').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Dimensionvalues = Resource$Dimensionvalues;\n  class Resource$Directorysites {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/directorySites/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/directorySites').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/directorySites').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Directorysites = Resource$Directorysites;\n  class Resource$Dynamictargetingkeys {\n    constructor(context) {\n      this.context = context;\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/dynamicTargetingKeys/{objectId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'objectId', 'name', 'objectType'],\n        pathParams: ['objectId', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/dynamicTargetingKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/dynamicTargetingKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Dynamictargetingkeys = Resource$Dynamictargetingkeys;\n  class Resource$Eventtags {\n    constructor(context) {\n      this.context = context;\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/eventTags/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/eventTags/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Eventtags = Resource$Eventtags;\n  class Resource$Files {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/reports/{reportId}/files/{fileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['reportId', 'fileId'],\n        pathParams: ['fileId', 'reportId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/files').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Files = Resource$Files;\n  class Resource$Floodlightactivities {\n    constructor(context) {\n      this.context = context;\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/floodlightActivities/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    generatetag(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/floodlightActivities/generatetag').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/floodlightActivities/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Floodlightactivities = Resource$Floodlightactivities;\n  class Resource$Floodlightactivitygroups {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/floodlightActivityGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Floodlightactivitygroups = Resource$Floodlightactivitygroups;\n  class Resource$Floodlightconfigurations {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/floodlightConfigurations/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Floodlightconfigurations = Resource$Floodlightconfigurations;\n  class Resource$Inventoryitems {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/projects/{projectId}/inventoryItems/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'projectId', 'id'],\n        pathParams: ['id', 'profileId', 'projectId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/projects/{projectId}/inventoryItems').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'projectId'],\n        pathParams: ['profileId', 'projectId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Inventoryitems = Resource$Inventoryitems;\n  class Resource$Languages {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/languages').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Languages = Resource$Languages;\n  class Resource$Metros {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/metros').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Metros = Resource$Metros;\n  class Resource$Mobileapps {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/mobileApps/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/mobileApps').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Mobileapps = Resource$Mobileapps;\n  class Resource$Mobilecarriers {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/mobileCarriers/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/mobileCarriers').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Mobilecarriers = Resource$Mobilecarriers;\n  class Resource$Operatingsystems {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/operatingSystems/{dartId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'dartId'],\n        pathParams: ['dartId', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/operatingSystems').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Operatingsystems = Resource$Operatingsystems;\n  class Resource$Operatingsystemversions {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/operatingSystemVersions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/operatingSystemVersions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Operatingsystemversions = Resource$Operatingsystemversions;\n  class Resource$Orderdocuments {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/projects/{projectId}/orderDocuments/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'projectId', 'id'],\n        pathParams: ['id', 'profileId', 'projectId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/projects/{projectId}/orderDocuments').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'projectId'],\n        pathParams: ['profileId', 'projectId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Orderdocuments = Resource$Orderdocuments;\n  class Resource$Orders {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/projects/{projectId}/orders/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'projectId', 'id'],\n        pathParams: ['id', 'profileId', 'projectId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/projects/{projectId}/orders').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'projectId'],\n        pathParams: ['profileId', 'projectId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Orders = Resource$Orders;\n  class Resource$Placementgroups {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/placementGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Placementgroups = Resource$Placementgroups;\n  class Resource$Placements {\n    constructor(context) {\n      this.context = context;\n    }\n    generatetags(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/placements/generatetags').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/placements/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Placements = Resource$Placements;\n  class Resource$Placementstrategies {\n    constructor(context) {\n      this.context = context;\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/placementStrategies/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/placementStrategies/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Placementstrategies = Resource$Placementstrategies;\n  class Resource$Platformtypes {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/platformTypes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/platformTypes').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Platformtypes = Resource$Platformtypes;\n  class Resource$Postalcodes {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/postalCodes/{code}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'code'],\n        pathParams: ['code', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/postalCodes').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Postalcodes = Resource$Postalcodes;\n  class Resource$Projects {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/projects/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/projects').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Projects = Resource$Projects;\n  class Resource$Regions {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/regions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Regions = Resource$Regions;\n  class Resource$Remarketinglists {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/remarketingLists/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'advertiserId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Remarketinglists = Resource$Remarketinglists;\n  class Resource$Remarketinglistshares {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/remarketingListShares/{remarketingListId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'remarketingListId'],\n        pathParams: ['profileId', 'remarketingListId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/remarketingListShares').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/remarketingListShares').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Remarketinglistshares = Resource$Remarketinglistshares;\n  class Resource$Reports {\n    constructor(context) {\n      this.context = context;\n      this.compatibleFields = new Resource$Reports$Compatiblefields(this.context);\n      this.files = new Resource$Reports$Files(this.context);\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'reportId'],\n        pathParams: ['profileId', 'reportId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'reportId'],\n        pathParams: ['profileId', 'reportId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'reportId'],\n        pathParams: ['profileId', 'reportId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    run(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/reports/{reportId}/run').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'reportId'],\n        pathParams: ['profileId', 'reportId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'reportId'],\n        pathParams: ['profileId', 'reportId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Reports = Resource$Reports;\n  class Resource$Reports$Compatiblefields {\n    constructor(context) {\n      this.context = context;\n    }\n    query(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/reports/compatiblefields/query').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Reports$Compatiblefields = Resource$Reports$Compatiblefields;\n  class Resource$Reports$Files {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/reports/{reportId}/files/{fileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'reportId', 'fileId'],\n        pathParams: ['fileId', 'profileId', 'reportId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/reports/{reportId}/files').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'reportId'],\n        pathParams: ['profileId', 'reportId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Reports$Files = Resource$Reports$Files;\n  class Resource$Sites {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/sites/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Sites = Resource$Sites;\n  class Resource$Sizes {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/sizes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/sizes').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/sizes').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Sizes = Resource$Sizes;\n  class Resource$Subaccounts {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/subaccounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Subaccounts = Resource$Subaccounts;\n  class Resource$Targetableremarketinglists {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/targetableRemarketingLists/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/targetableRemarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'advertiserId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Targetableremarketinglists = Resource$Targetableremarketinglists;\n  class Resource$Targetingtemplates {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/targetingTemplates/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Targetingtemplates = Resource$Targetingtemplates;\n  class Resource$Userprofiles {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Userprofiles = Resource$Userprofiles;\n  class Resource$Userrolepermissiongroups {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/userRolePermissionGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/userRolePermissionGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Userrolepermissiongroups = Resource$Userrolepermissiongroups;\n  class Resource$Userrolepermissions {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/userRolePermissions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/userRolePermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Userrolepermissions = Resource$Userrolepermissions;\n  class Resource$Userroles {\n    constructor(context) {\n      this.context = context;\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/userRoles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/userRoles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    update(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PUT'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Userroles = Resource$Userroles;\n  class Resource$Videoformats {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/videoFormats/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId', 'id'],\n        pathParams: ['id', 'profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/videoFormats').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET'\n        }, options),\n        params,\n        requiredParams: ['profileId'],\n        pathParams: ['profileId'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  dfareporting_v4.Resource$Videoformats = Resource$Videoformats;\n})(dfareporting_v4 = exports.dfareporting_v4 || (exports.dfareporting_v4 = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","dfareporting_v4","googleapis_common_1","require","Dfareporting","constructor","options","google","context","_options","accountActiveAdSummaries","Resource$Accountactiveadsummaries","accountPermissionGroups","Resource$Accountpermissiongroups","accountPermissions","Resource$Accountpermissions","accounts","Resource$Accounts","accountUserProfiles","Resource$Accountuserprofiles","ads","Resource$Ads","advertiserGroups","Resource$Advertisergroups","advertiserInvoices","Resource$Advertiserinvoices","advertiserLandingPages","Resource$Advertiserlandingpages","advertisers","Resource$Advertisers","billingAssignments","Resource$Billingassignments","billingProfiles","Resource$Billingprofiles","billingRates","Resource$Billingrates","browsers","Resource$Browsers","campaignCreativeAssociations","Resource$Campaigncreativeassociations","campaigns","Resource$Campaigns","changeLogs","Resource$Changelogs","cities","Resource$Cities","connectionTypes","Resource$Connectiontypes","contentCategories","Resource$Contentcategories","conversions","Resource$Conversions","countries","Resource$Countries","creativeAssets","Resource$Creativeassets","creativeFields","Resource$Creativefields","creativeFieldValues","Resource$Creativefieldvalues","creativeGroups","Resource$Creativegroups","creatives","Resource$Creatives","dimensionValues","Resource$Dimensionvalues","directorySites","Resource$Directorysites","dynamicTargetingKeys","Resource$Dynamictargetingkeys","eventTags","Resource$Eventtags","files","Resource$Files","floodlightActivities","Resource$Floodlightactivities","floodlightActivityGroups","Resource$Floodlightactivitygroups","floodlightConfigurations","Resource$Floodlightconfigurations","inventoryItems","Resource$Inventoryitems","languages","Resource$Languages","metros","Resource$Metros","mobileApps","Resource$Mobileapps","mobileCarriers","Resource$Mobilecarriers","operatingSystems","Resource$Operatingsystems","operatingSystemVersions","Resource$Operatingsystemversions","orderDocuments","Resource$Orderdocuments","orders","Resource$Orders","placementGroups","Resource$Placementgroups","placements","Resource$Placements","placementStrategies","Resource$Placementstrategies","platformTypes","Resource$Platformtypes","postalCodes","Resource$Postalcodes","projects","Resource$Projects","regions","Resource$Regions","remarketingLists","Resource$Remarketinglists","remarketingListShares","Resource$Remarketinglistshares","reports","Resource$Reports","sites","Resource$Sites","sizes","Resource$Sizes","subaccounts","Resource$Subaccounts","targetableRemarketingLists","Resource$Targetableremarketinglists","targetingTemplates","Resource$Targetingtemplates","userProfiles","Resource$Userprofiles","userRolePermissionGroups","Resource$Userrolepermissiongroups","userRolePermissions","Resource$Userrolepermissions","userRoles","Resource$Userroles","videoFormats","Resource$Videoformats","get","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","requiredParams","pathParams","createAPIRequest","list","patch","update","insert","delete","batchinsert","batchupdate","mediaUrl","query","generatetag","generatetags","compatibleFields","Resource$Reports$Compatiblefields","Resource$Reports$Files","run"],"sources":["C:/Users/edwin/node_modules/googleapis/build/src/apis/dfareporting/v4.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dfareporting_v4 = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar dfareporting_v4;\n(function (dfareporting_v4) {\n    /**\n     * Campaign Manager 360 API\n     *\n     * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const dfareporting = google.dfareporting('v4');\n     * ```\n     */\n    class Dfareporting {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.accountActiveAdSummaries = new Resource$Accountactiveadsummaries(this.context);\n            this.accountPermissionGroups = new Resource$Accountpermissiongroups(this.context);\n            this.accountPermissions = new Resource$Accountpermissions(this.context);\n            this.accounts = new Resource$Accounts(this.context);\n            this.accountUserProfiles = new Resource$Accountuserprofiles(this.context);\n            this.ads = new Resource$Ads(this.context);\n            this.advertiserGroups = new Resource$Advertisergroups(this.context);\n            this.advertiserInvoices = new Resource$Advertiserinvoices(this.context);\n            this.advertiserLandingPages = new Resource$Advertiserlandingpages(this.context);\n            this.advertisers = new Resource$Advertisers(this.context);\n            this.billingAssignments = new Resource$Billingassignments(this.context);\n            this.billingProfiles = new Resource$Billingprofiles(this.context);\n            this.billingRates = new Resource$Billingrates(this.context);\n            this.browsers = new Resource$Browsers(this.context);\n            this.campaignCreativeAssociations =\n                new Resource$Campaigncreativeassociations(this.context);\n            this.campaigns = new Resource$Campaigns(this.context);\n            this.changeLogs = new Resource$Changelogs(this.context);\n            this.cities = new Resource$Cities(this.context);\n            this.connectionTypes = new Resource$Connectiontypes(this.context);\n            this.contentCategories = new Resource$Contentcategories(this.context);\n            this.conversions = new Resource$Conversions(this.context);\n            this.countries = new Resource$Countries(this.context);\n            this.creativeAssets = new Resource$Creativeassets(this.context);\n            this.creativeFields = new Resource$Creativefields(this.context);\n            this.creativeFieldValues = new Resource$Creativefieldvalues(this.context);\n            this.creativeGroups = new Resource$Creativegroups(this.context);\n            this.creatives = new Resource$Creatives(this.context);\n            this.dimensionValues = new Resource$Dimensionvalues(this.context);\n            this.directorySites = new Resource$Directorysites(this.context);\n            this.dynamicTargetingKeys = new Resource$Dynamictargetingkeys(this.context);\n            this.eventTags = new Resource$Eventtags(this.context);\n            this.files = new Resource$Files(this.context);\n            this.floodlightActivities = new Resource$Floodlightactivities(this.context);\n            this.floodlightActivityGroups = new Resource$Floodlightactivitygroups(this.context);\n            this.floodlightConfigurations = new Resource$Floodlightconfigurations(this.context);\n            this.inventoryItems = new Resource$Inventoryitems(this.context);\n            this.languages = new Resource$Languages(this.context);\n            this.metros = new Resource$Metros(this.context);\n            this.mobileApps = new Resource$Mobileapps(this.context);\n            this.mobileCarriers = new Resource$Mobilecarriers(this.context);\n            this.operatingSystems = new Resource$Operatingsystems(this.context);\n            this.operatingSystemVersions = new Resource$Operatingsystemversions(this.context);\n            this.orderDocuments = new Resource$Orderdocuments(this.context);\n            this.orders = new Resource$Orders(this.context);\n            this.placementGroups = new Resource$Placementgroups(this.context);\n            this.placements = new Resource$Placements(this.context);\n            this.placementStrategies = new Resource$Placementstrategies(this.context);\n            this.platformTypes = new Resource$Platformtypes(this.context);\n            this.postalCodes = new Resource$Postalcodes(this.context);\n            this.projects = new Resource$Projects(this.context);\n            this.regions = new Resource$Regions(this.context);\n            this.remarketingLists = new Resource$Remarketinglists(this.context);\n            this.remarketingListShares = new Resource$Remarketinglistshares(this.context);\n            this.reports = new Resource$Reports(this.context);\n            this.sites = new Resource$Sites(this.context);\n            this.sizes = new Resource$Sizes(this.context);\n            this.subaccounts = new Resource$Subaccounts(this.context);\n            this.targetableRemarketingLists = new Resource$Targetableremarketinglists(this.context);\n            this.targetingTemplates = new Resource$Targetingtemplates(this.context);\n            this.userProfiles = new Resource$Userprofiles(this.context);\n            this.userRolePermissionGroups = new Resource$Userrolepermissiongroups(this.context);\n            this.userRolePermissions = new Resource$Userrolepermissions(this.context);\n            this.userRoles = new Resource$Userroles(this.context);\n            this.videoFormats = new Resource$Videoformats(this.context);\n        }\n    }\n    dfareporting_v4.Dfareporting = Dfareporting;\n    class Resource$Accountactiveadsummaries {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/accountActiveAdSummaries/{summaryAccountId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'summaryAccountId'],\n                pathParams: ['profileId', 'summaryAccountId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Accountactiveadsummaries = Resource$Accountactiveadsummaries;\n    class Resource$Accountpermissiongroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/accountPermissionGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/accountPermissionGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Accountpermissiongroups = Resource$Accountpermissiongroups;\n    class Resource$Accountpermissions {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/accountPermissions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/accountPermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Accountpermissions = Resource$Accountpermissions;\n    class Resource$Accounts {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/accounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Accounts = Resource$Accounts;\n    class Resource$Accountuserprofiles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/accountUserProfiles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/accountUserProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Accountuserprofiles = Resource$Accountuserprofiles;\n    class Resource$Ads {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/ads/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/ads').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Ads = Resource$Ads;\n    class Resource$Advertisergroups {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/advertiserGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/advertiserGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/advertiserGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Advertisergroups = Resource$Advertisergroups;\n    class Resource$Advertiserinvoices {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/advertisers/{advertiserId}/invoices').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'advertiserId'],\n                pathParams: ['advertiserId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Advertiserinvoices = Resource$Advertiserinvoices;\n    class Resource$Advertiserlandingpages {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/advertiserLandingPages/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/advertiserLandingPages').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Advertiserlandingpages = Resource$Advertiserlandingpages;\n    class Resource$Advertisers {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/advertisers/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/advertisers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Advertisers = Resource$Advertisers;\n    class Resource$Billingassignments {\n        constructor(context) {\n            this.context = context;\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/billingProfiles/{billingProfileId}/billingAssignments').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'billingProfileId'],\n                pathParams: ['billingProfileId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/billingProfiles/{billingProfileId}/billingAssignments').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'billingProfileId'],\n                pathParams: ['billingProfileId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Billingassignments = Resource$Billingassignments;\n    class Resource$Billingprofiles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/billingProfiles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/billingProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/billingProfiles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Billingprofiles = Resource$Billingprofiles;\n    class Resource$Billingrates {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/billingProfiles/{billingProfileId}/billingRates').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'billingProfileId'],\n                pathParams: ['billingProfileId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Billingrates = Resource$Billingrates;\n    class Resource$Browsers {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/browsers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Browsers = Resource$Browsers;\n    class Resource$Campaigncreativeassociations {\n        constructor(context) {\n            this.context = context;\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'campaignId'],\n                pathParams: ['campaignId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'campaignId'],\n                pathParams: ['campaignId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Campaigncreativeassociations = Resource$Campaigncreativeassociations;\n    class Resource$Campaigns {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/campaigns/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/campaigns').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Campaigns = Resource$Campaigns;\n    class Resource$Changelogs {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/changeLogs/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/changeLogs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Changelogs = Resource$Changelogs;\n    class Resource$Cities {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/cities').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Cities = Resource$Cities;\n    class Resource$Connectiontypes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/connectionTypes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/connectionTypes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Connectiontypes = Resource$Connectiontypes;\n    class Resource$Contentcategories {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/contentCategories/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/contentCategories/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/contentCategories').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Contentcategories = Resource$Contentcategories;\n    class Resource$Conversions {\n        constructor(context) {\n            this.context = context;\n        }\n        batchinsert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/conversions/batchinsert').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        batchupdate(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/conversions/batchupdate').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Conversions = Resource$Conversions;\n    class Resource$Countries {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/countries/{dartId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'dartId'],\n                pathParams: ['dartId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/countries').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Countries = Resource$Countries;\n    class Resource$Creativeassets {\n        constructor(context) {\n            this.context = context;\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                mediaUrl: (rootUrl +\n                    '/upload/dfareporting/v4/userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets').replace(/([^:]\\/)\\/+/g, '$1'),\n                requiredParams: ['profileId', 'advertiserId'],\n                pathParams: ['advertiserId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Creativeassets = Resource$Creativeassets;\n    class Resource$Creativefields {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/creativeFields/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/creativeFields/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/creativeFields').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Creativefields = Resource$Creativefields;\n    class Resource$Creativefieldvalues {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId', 'id'],\n                pathParams: ['creativeFieldId', 'id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId', 'id'],\n                pathParams: ['creativeFieldId', 'id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId'],\n                pathParams: ['creativeFieldId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId'],\n                pathParams: ['creativeFieldId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId', 'id'],\n                pathParams: ['creativeFieldId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'creativeFieldId'],\n                pathParams: ['creativeFieldId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Creativefieldvalues = Resource$Creativefieldvalues;\n    class Resource$Creativegroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/creativeGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/creativeGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Creativegroups = Resource$Creativegroups;\n    class Resource$Creatives {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/creatives/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/creatives').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Creatives = Resource$Creatives;\n    class Resource$Dimensionvalues {\n        constructor(context) {\n            this.context = context;\n        }\n        query(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/dimensionvalues/query').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Dimensionvalues = Resource$Dimensionvalues;\n    class Resource$Directorysites {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/directorySites/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/directorySites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/directorySites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Directorysites = Resource$Directorysites;\n    class Resource$Dynamictargetingkeys {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/dynamicTargetingKeys/{objectId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'objectId', 'name', 'objectType'],\n                pathParams: ['objectId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/dynamicTargetingKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/dynamicTargetingKeys').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Dynamictargetingkeys = Resource$Dynamictargetingkeys;\n    class Resource$Eventtags {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/eventTags/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/eventTags/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/eventTags').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Eventtags = Resource$Eventtags;\n    class Resource$Files {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/reports/{reportId}/files/{fileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['reportId', 'fileId'],\n                pathParams: ['fileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/files').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Files = Resource$Files;\n    class Resource$Floodlightactivities {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/floodlightActivities/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        generatetag(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/floodlightActivities/generatetag').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/floodlightActivities/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/floodlightActivities').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Floodlightactivities = Resource$Floodlightactivities;\n    class Resource$Floodlightactivitygroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/floodlightActivityGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/floodlightActivityGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Floodlightactivitygroups = Resource$Floodlightactivitygroups;\n    class Resource$Floodlightconfigurations {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/floodlightConfigurations/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/floodlightConfigurations').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Floodlightconfigurations = Resource$Floodlightconfigurations;\n    class Resource$Inventoryitems {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/projects/{projectId}/inventoryItems/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId', 'id'],\n                pathParams: ['id', 'profileId', 'projectId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/projects/{projectId}/inventoryItems').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId'],\n                pathParams: ['profileId', 'projectId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Inventoryitems = Resource$Inventoryitems;\n    class Resource$Languages {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/languages').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Languages = Resource$Languages;\n    class Resource$Metros {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/metros').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Metros = Resource$Metros;\n    class Resource$Mobileapps {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/mobileApps/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/mobileApps').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Mobileapps = Resource$Mobileapps;\n    class Resource$Mobilecarriers {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/mobileCarriers/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/mobileCarriers').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Mobilecarriers = Resource$Mobilecarriers;\n    class Resource$Operatingsystems {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/operatingSystems/{dartId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'dartId'],\n                pathParams: ['dartId', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/operatingSystems').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Operatingsystems = Resource$Operatingsystems;\n    class Resource$Operatingsystemversions {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/operatingSystemVersions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/operatingSystemVersions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Operatingsystemversions = Resource$Operatingsystemversions;\n    class Resource$Orderdocuments {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/projects/{projectId}/orderDocuments/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId', 'id'],\n                pathParams: ['id', 'profileId', 'projectId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/projects/{projectId}/orderDocuments').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId'],\n                pathParams: ['profileId', 'projectId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Orderdocuments = Resource$Orderdocuments;\n    class Resource$Orders {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/projects/{projectId}/orders/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId', 'id'],\n                pathParams: ['id', 'profileId', 'projectId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/projects/{projectId}/orders').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'projectId'],\n                pathParams: ['profileId', 'projectId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Orders = Resource$Orders;\n    class Resource$Placementgroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/placementGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/placementGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Placementgroups = Resource$Placementgroups;\n    class Resource$Placements {\n        constructor(context) {\n            this.context = context;\n        }\n        generatetags(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/placements/generatetags').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/placements/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/placements').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Placements = Resource$Placements;\n    class Resource$Placementstrategies {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/placementStrategies/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/placementStrategies/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/placementStrategies').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Placementstrategies = Resource$Placementstrategies;\n    class Resource$Platformtypes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/platformTypes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/platformTypes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Platformtypes = Resource$Platformtypes;\n    class Resource$Postalcodes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/postalCodes/{code}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'code'],\n                pathParams: ['code', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/postalCodes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Postalcodes = Resource$Postalcodes;\n    class Resource$Projects {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/projects/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/projects').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Projects = Resource$Projects;\n    class Resource$Regions {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/regions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Regions = Resource$Regions;\n    class Resource$Remarketinglists {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/remarketingLists/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'advertiserId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/remarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Remarketinglists = Resource$Remarketinglists;\n    class Resource$Remarketinglistshares {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/remarketingListShares/{remarketingListId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'remarketingListId'],\n                pathParams: ['profileId', 'remarketingListId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/remarketingListShares').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/remarketingListShares').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Remarketinglistshares = Resource$Remarketinglistshares;\n    class Resource$Reports {\n        constructor(context) {\n            this.context = context;\n            this.compatibleFields = new Resource$Reports$Compatiblefields(this.context);\n            this.files = new Resource$Reports$Files(this.context);\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/reports').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        run(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/reports/{reportId}/run').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/reports/{reportId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Reports = Resource$Reports;\n    class Resource$Reports$Compatiblefields {\n        constructor(context) {\n            this.context = context;\n        }\n        query(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/reports/compatiblefields/query').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Reports$Compatiblefields = Resource$Reports$Compatiblefields;\n    class Resource$Reports$Files {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/reports/{reportId}/files/{fileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId', 'fileId'],\n                pathParams: ['fileId', 'profileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/reports/{reportId}/files').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'reportId'],\n                pathParams: ['profileId', 'reportId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Reports$Files = Resource$Reports$Files;\n    class Resource$Sites {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/sites/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/sites').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Sites = Resource$Sites;\n    class Resource$Sizes {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/sizes/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/sizes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/sizes').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Sizes = Resource$Sizes;\n    class Resource$Subaccounts {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/subaccounts/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/subaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Subaccounts = Resource$Subaccounts;\n    class Resource$Targetableremarketinglists {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/targetableRemarketingLists/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/targetableRemarketingLists').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'advertiserId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Targetableremarketinglists = Resource$Targetableremarketinglists;\n    class Resource$Targetingtemplates {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/targetingTemplates/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/targetingTemplates').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Targetingtemplates = Resource$Targetingtemplates;\n    class Resource$Userprofiles {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Userprofiles = Resource$Userprofiles;\n    class Resource$Userrolepermissiongroups {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/userRolePermissionGroups/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/userRolePermissionGroups').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Userrolepermissiongroups = Resource$Userrolepermissiongroups;\n    class Resource$Userrolepermissions {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/userRolePermissions/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/userRolePermissions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Userrolepermissions = Resource$Userrolepermissions;\n    class Resource$Userroles {\n        constructor(context) {\n            this.context = context;\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/userRoles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/userRoles/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        update(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/userRoles').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PUT',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Userroles = Resource$Userroles;\n    class Resource$Videoformats {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/dfareporting/v4/userprofiles/{profileId}/videoFormats/{id}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId', 'id'],\n                pathParams: ['id', 'profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://dfareporting.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/dfareporting/v4/userprofiles/{profileId}/videoFormats').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                }, options),\n                params,\n                requiredParams: ['profileId'],\n                pathParams: ['profileId'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    dfareporting_v4.Resource$Videoformats = Resource$Videoformats;\n})(dfareporting_v4 = exports.dfareporting_v4 || (exports.dfareporting_v4 = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}